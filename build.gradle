buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE"
        classpath "org.hidetake:gradle-ssh-plugin:2.9.0"
    }
}



apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.hidetake.ssh'

group 'com.kakayunmu'
version '1.0-SNAPSHOT'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4'
        mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.2.RELEASE'
    }
}
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
targetCompatibility = 1.8

springBoot {
    executable = true
}

remotes {
    webServer {

    }
}

repositories {
    mavenCentral()
    jcenter()
}

remotes {
    deployServer {
        host = '47.104.190.184'
        port = 22
        user = "root"
    }
}
ssh.settings {
    knownHosts = allowAnyHosts
    identity = new File("~/.ssh/id_rsa")
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.projectlombok:lombok:1.16.18")
    compile("org.springframework.cloud:spring-cloud-starter-feign")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("mysql:mysql-connector-java")
    compile("org.springframework:spring-beans")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

// 停止服务器应用
task deployStop() {
    group 'service'
    description '停止服务'
    doFirst {
        println 'stop service'
    }
    doLast {
        ssh.run {
            session(remotes.deployServer) {
                execute 'service bluebox stop'
            }
        }
    }
}

// 启动服务器
task deployStart() {
    group 'service'
    description '启动服务'
    doFirst {
        println 'start service start'
    }
    doLast {
        ssh.run {
            session(remotes.deployServer) {
                execute 'service bluebox start'
            }
        }
    }
}

task deployRestart(){
    group 'service'
    description '重启服务器'
    doFirst{
        println 'start service restart'
    }
    doLast{
        ssh.run {
            session(remotes.deployServer) {
                execute 'service bluebox restart'
            }
        }
    }
}

// 将发布的文件ssh 方式传输到服务器
task deployCopy() {
    group 'service'
    description '复制jar 到服务器'
    dependsOn bootRepackage
    doFirst {
        println 'copy file to server'
    }
    doLast {
        ssh.run {
            session(remotes.deployServer) {
                put from: buildDir.toString() + '/libs/bluebox-' + version + '.jar', into: '/home/apps'
                execute 'ls /home/apps'
            }
        }
    }
}


// 打包发布到服务器
task blueBox(){
    dependsOn deployCopy
    group 'service'
    description '打包发布到服务器'
    doFirst {
        deployStop
    }
    doLast {
        deployStart
    }
}